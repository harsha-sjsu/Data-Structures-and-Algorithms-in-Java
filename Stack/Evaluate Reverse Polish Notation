/* Question: Evaluate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Some examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6 */
  
  public class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<Integer>();
        for(String s:tokens)
        {
            if(s.equals("+") || s.equals("-") || s.equals("*") || s.equals("/"))
            {
                int b = stack.pop(), a = stack.pop();
                if(s.equals("+"))
                stack.push(a+b);
                else if(s.equals("-"))
                stack.push(a-b);
                else if(s.equals("*"))
                stack.push(a*b);
                else if(s.equals("/"))
                stack.push(a/b);
               
            }
            else
            {
                stack.push(Integer.valueOf(s));
            }
        }
        return stack.pop();
    }
}
