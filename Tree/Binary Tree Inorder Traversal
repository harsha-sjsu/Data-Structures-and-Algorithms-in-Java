/* Question: Given a binary tree, return the inorder traversal of its nodes' values.

For example:
Given binary tree {1,#,2,3},
   1
    \
     2
    /
   3
return [1,3,2]. */

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> l = new ArrayList<Integer>();
        if(root == null)
        return l;
        Stack<TreeNode> s = new Stack<TreeNode>();
        TreeNode current = root;
        while(!s.isEmpty() || current!=null)
        {
            while(current!= null)
            {
                s.add(current);
                current=current.left;
            }
                TreeNode temp = s.pop();
                l.add(temp.val);
                current=temp.right;
        }
        return l;
    }
}
