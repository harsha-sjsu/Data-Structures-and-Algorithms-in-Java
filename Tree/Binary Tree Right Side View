/* Question : Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

For example:
Given the following binary tree,
   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---
You should return [1, 3, 4]. */

/**
 * Definition for binary tree
 * public class TreeTreeNode {
 *     int val;
 *     TreeTreeNode left;
 *     TreeTreeNode right;
 *     TreeTreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> rightSideView(TreeNode root) {
	        List<Integer> result = new ArrayList<Integer>();
	        if(root==null)
	        return result;
	        Queue<TreeNode> q= new LinkedList<TreeNode>();
	        TreeNode dummy= new TreeNode(Integer.MIN_VALUE);
	        q.add(root);
	        q.add(dummy);
	        TreeNode previous=null;
	        while(!q.isEmpty())
	        {
	        	TreeNode current=q.poll();
	            if(current!=dummy)
	            {
	            	previous=current;
	                if(current.left!=null)
	                q.add(current.left);
	                if(current.right!=null)
	                q.add(current.right);
	            }
	            else
	            {
	            	result.add(previous.val);
	            	q.add(dummy);
	            }
	        }
	        return result;
}
}
