/*
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
*/

public class Solution {
    public int threeSumClosest(int[] nums, int target) {
        if(nums.length == 0)
        return 0;
        int minCopy = Integer.MAX_VALUE, min = 0;
        Arrays.sort(nums);
        for(int i=0; i<nums.length-2;i++)
        {
            for(int j = i+1, k = nums.length-1;j<nums.length-1 && j<k;)
            {
                int sum = nums[i]+nums[j]+nums[k];
                //System.out.println(sum);
                if((int)Math.abs(sum - target) < minCopy)
                {
                    min = sum;
                    minCopy = (int)Math.abs(sum - target);
                }
                if( sum == target)
                    return target;
                else if(sum < target)
                    j++;
                else
                    k--;
            }
        }
    return min;
    }
}
