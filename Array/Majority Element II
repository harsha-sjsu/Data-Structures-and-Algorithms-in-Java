/*
Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times. The algorithm should run in linear time and in O(1) space.
*/

public class Solution {
    public List<Integer> majorityElement(int[] nums) {
      HashMap<Integer,Integer> map = new HashMap<Integer, Integer>();
      List<Integer> result = new ArrayList<Integer>();
      for(int i:nums)
      {
          if(map.containsKey(i))
          map.put(i,map.get(i)+1);
          else
          map.put(i,1);
      }
      for(int i:map.keySet())
      {
          if(map.get(i) > (nums.length/3))
          result.add(i);
      }
      return result;
    }
}
