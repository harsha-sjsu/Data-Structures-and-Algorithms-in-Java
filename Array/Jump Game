/*Given an array of non-negative integers, you are initially positioned at the first index of the array.

Each element in the array represents your maximum jump length at that position.

Determine if you are able to reach the last index.

For example:
A = [2,3,1,1,4], return true.

A = [3,2,1,0,4], return false.*/

public class Solution {
    public boolean canJump(int[] A) {
    int len=A.length;
    int ability=A[0];//the farmost grid index that can be reached
    for(int i=1;i<len;i++)
    {
        if(ability<i)//cannot reach beyond current grid by any means, return false
        return false;
        //update ability using the bigger grid index that can be reached
        ability=ability>i+A[i]?ability:i+A[i];
    }
    //loop finished, the last grid can be reached
    return true;
}
}

