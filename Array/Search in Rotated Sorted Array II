/*
Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?

Write a function to determine if a given target is in the array.
*/

public class Solution {
   public boolean search(int[] nums, int target) {
        int low=0, high=nums.length-1,mid;
        while(low<=high)
        {
            mid=low+(high-low)/2;
            if(nums[mid]==target)
            return true;
            if(nums[low]<nums[mid])
            {
                if(target<nums[mid] && target>=nums[low])
                high=mid-1;
                else
                low=mid+1;
            }
            else if(nums[low] > nums[mid])
            {
                if(target<=nums[high] && target>nums[mid])
                low=mid+1;
                else
                high=mid-1;
            }
            else
            low = low+1;
        }
        return false;
    }
}
