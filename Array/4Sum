/*
Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.

Note: The solution set must not contain duplicate quadruplets.

For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.

A solution set is:
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]
*/

public class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> list = new ArrayList<List<Integer>>();
        HashSet<List<Integer>> s = new HashSet<List<Integer>>();
        for(int i=0;i<nums.length-3;i++)
        {
            for(int m=i+1;m<nums.length-2;m++)
            {
                for(int j=m+1,k=nums.length-1;j<k;)
                {
                    if(nums[i]+nums[m]+nums[j]+nums[k]==target)
                    {
                        List<Integer> l= new ArrayList<Integer>();
                        l.add(nums[i]);
                        l.add(nums[m]);
                        l.add(nums[j]);
                        l.add(nums[k]);
                        if(s.add(l))
                        list.add(l);
                        j++;
                        k--;
                    }
                    else if(nums[i]+nums[m]+nums[j]+nums[k]<target)
                    j++;
                    else
                    k--;
                }
            }
        }    
        return list;
    }
}
