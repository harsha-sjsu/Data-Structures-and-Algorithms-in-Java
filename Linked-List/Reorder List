/* Question: Given a singly linked list L: L0→L1→…→Ln-1→Ln,
reorder it to: L0→Ln→L1→Ln-1→L2→Ln-2→…

You must do this in-place without altering the nodes' values.

For example,
Given {1,2,3,4}, reorder it to {1,4,2,3} */

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void reorderList(ListNode head) {
        ListNode slow = head, fast = head,secondHead=null;
        while(slow!=null && fast!=null && fast.next!=null)
        {
            slow = slow.next;
            fast=fast.next.next;
        }
        if(slow!=null)
        {
        secondHead = reverse(slow.next);
        slow.next=null;
        }
        reorderList(head,secondHead);
    }
    private void reorderList(ListNode head,ListNode secondHead)
    {
       ListNode newHead= new ListNode(0),dummy = newHead;
       while(head !=null && secondHead !=null)
       {
           dummy.next=head;
           ListNode temp1 = head.next;
           head.next=secondHead;
           ListNode temp2 = secondHead.next;
           head=temp1;
           dummy=secondHead;
           secondHead=temp2;
       }
       dummy.next= head!=null?head:secondHead;
       head=newHead.next;
    }
    private ListNode reverse(ListNode head)
    {
        if(head == null)
        return null;
        ListNode previous =null, next =null;
        while(head!=null)
        {
            next= head.next;
            head.next=previous;
            previous=head;
            head=next;
        }
        return previous;
    }
}
