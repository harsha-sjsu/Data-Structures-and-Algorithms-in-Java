/* Question: Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3 */

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null)
        return head;
        ListNode current = head;
        ListNode dummy = new ListNode(0), index = dummy;
        ListNode previous = current;
        current = current.next;
        while(current!=null)
        {
            if(previous!=null && current.val == previous.val)
            {
                while(current!=null && current.val == previous.val)
                {
                    current = current.next;
                }
                previous = current;
            }
            else
            {
                index.next = previous;
                index=index.next;
                index.next = null;
                previous = current;
            }
            if(current!=null)
            current = current.next; 
            
        }
        if(previous!=null)
        index.next = previous;
        return dummy.next;
    }
}
