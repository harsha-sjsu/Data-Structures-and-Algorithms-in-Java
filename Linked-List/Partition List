/* Question:Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.

You should preserve the original relative order of the nodes in each of the two partitions.

For example,
Given 1->4->3->2->5->2 and x = 3,
return 1->2->2->4->3->5.*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode partition(ListNode head, int x) {
        if(head == null)
        return null;
        ListNode bigDummy =new ListNode(0), smallDummy=new ListNode(0),big=bigDummy,small=smallDummy;
        while(head!=null)
        {
            if(head.val<x)
            {
                small.next = head;
                small=small.next;
            }
            else
            {
                big.next = head;
                big = big.next;
            }
            ListNode temp = head.next;
            head.next = null;
            head = temp;
        }
        if(small!=null)
        {
        small.next=bigDummy.next;
        return smallDummy.next;
        }
        else
        return bigDummy.next;
}
}
